spring:
  profiles:
    active: developer
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  activemq:
    broker-url: tcp://activemq:61616
    user: admin
    password: admin
    packages:
      trust-all: true
  jms:
    template:
      default-destination: 604800000
      receive-timeout: 5000

springdoc:
  swagger-ui:
    path: /swagger-ui-custom.html

jwt:
  secret: qu8)io1n7%^(*(hhl#k5^&l_kf90!i3o
  lifetime: 60m

eureka:
  client:
    service-url:
      defaultZone: http://eureka-app:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

resilience4j:
  circuitbreaker:
    instances:
      trainerWorkloadService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5000ms
---
spring:
  config:
    activate:
      on-profile: developer

  application:
    name: FinalProjectEpamLabApplication
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
  datasource:
    url: jdbc:mysql://mysql:3306/gymdb?createDatabaseIfNotExist=true
    username: root
    password: 12345
    driverClassName: com.mysql.cj.jdbc.Driver

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: false
    diskspace:
      enabled: false

messaging:
  queues:
    trainerWorkload: trainer-workload-queue
    getTrainerWorkloadRequest: get-trainer-workload-queue-request
    getTrainerWorkloadResponse: get-trainer-workload-queue-response

---
spring:
  config:
    activate:
      on-profile: test

  application:
    name: FinalProjectEpamLabApplication
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driverClassName: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true
      path: /h2-console

server:
  port: 9000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: false
    diskspace:
      enabled: false

messaging:
  queues:
    trainerWorkload: test-trainer-workload-queue
    getTrainerWorkloadRequest: test-get-trainer-workload-queue-request
    getTrainerWorkloadResponse: test-get-trainer-workload-queue-response